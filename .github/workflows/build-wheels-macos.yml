name: build-wheels-macos

on: [push, pull_request]

jobs:
  build_wheels_mac:
    name: Build wheels on ${{ matrix.os }}
    runs-on: macos-latest    

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.7.0

      - name: Install pyomo pybind
        run: python -m pip install pybind11 pyomo

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Create install dir
        run: cmake -E make_directory ${{runner.workspace}}/installs/

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: |
          cmake $GITHUB_WORKSPACE -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=${{runner.workspace}}/installs/highs -DFAST_BUILD=ON

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: |
          cmake --build . --parallel 
          cmake --install .

      - name: Build wheels
        run: |
          cd  $GITHUB_WORKSPACE
          export REPAIR_LIBRARY_PATH=${{runner.workspace}}/installs/highs/lib
          export LD_LIBRARY_PATH=$REPAIR_LIBRARY_PATH
          export DYLD_LIBRARY_PATH=$REPAIR_LIBRARY_PATH
          ls $REPAIR_LIBRARY_PATH
          python -m cibuildwheel --output-dir ./highs/python/dist ./highs/python

        env:
          CIBW_ENVIRONMENT: REPAIR_LIBRARY_PATH=${{runner.workspace}}/installs/highs/lib 
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: >
            DYLD_LIBRARY_PATH=$REPAIR_LIBRARY_PATH delocate-listdeps {wheel} &&
            DYLD_LIBRARY_PATH=$REPAIR_LIBRARY_PATH delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}

      - name: Make SDist
        runs-on: macos-latest
        steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0  # Optional, use if you use setuptools_scm
            submodules: false # Optional, use if you have submodules

      - name: Build SDist
        run: pipx run build --sdist ./highs/python

      - uses: actions/upload-artifact@v3
        with:
          path: ./highs/python/dist/*.tar.gz

  upload_all_macos:
    needs: [build_wheels_mac]
    runs-on: macos-latest
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: artifact
        path: ./highs/python/dist

    - uses: pypa/gh-action-pypi-publish@v1.5.0
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}